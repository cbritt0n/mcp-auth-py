events {
    worker_connections 1024;
}

http {
    upstream local_backend {
        server mcp-auth-local:8000;
    }

    upstream aws_backend {
        server mcp-auth-aws:8000;
    }

    upstream google_backend {
        server mcp-auth-google:8000;
    }

    server {
        listen 80;
        server_name localhost;

        # Route to different auth providers based on path
        location /local/ {
            proxy_pass http://local_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /aws/ {
            proxy_pass http://aws_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /google/ {
            proxy_pass http://google_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default to local provider
        location / {
            proxy_pass http://local_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
