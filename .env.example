# mcp-auth-py configuration examples
# Copy this file to .env and customize for your deployment

# Basic Authentication Provider (required)
AUTH_PROVIDER=local
# Supported: local, google, aws, azure, github, discord

# JWT Configuration (for local provider)
JWT_SECRET=change-this-to-a-secure-32-character-key-for-production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=60

# Provider-specific configuration (JSON string)
# Local: PROVIDER_CONFIG='{}'
# Google: PROVIDER_CONFIG='{"audience":"your-client-id.apps.googleusercontent.com"}'
# AWS: PROVIDER_CONFIG='{"cognito_region":"us-west-2","cognito_user_pool_id":"us-west-2_XXXXXXXXX","audience":"your-client-id"}'
# Azure: PROVIDER_CONFIG='{"tenant":"your-tenant-id","audience":"your-app-client-id"}'
# GitHub: PROVIDER_CONFIG='{"client_id":"your_github_client_id","allowed_organizations":["your-org"]}'
# Discord: PROVIDER_CONFIG='{"client_id":"your_discord_client_id","allowed_guilds":["123456789012345678"]}'
PROVIDER_CONFIG='{}'

# Redis Configuration (optional, for caching and enterprise features)
REDIS_JWKS=false
REDIS_URL=redis://localhost:6379/0

# Enterprise Multi-Tenancy (optional)
# TENANT_STRATEGY=row_level_security  # database_per_tenant, schema_per_tenant, row_level_security
# TENANT_RESOLVER=header  # header, subdomain, path, jwt

# Performance Monitoring (optional)
# ENABLE_PERFORMANCE_MONITORING=false
# PERFORMANCE_METRICS_RETENTION=3600
# ENABLE_CIRCUIT_BREAKER=false
# CIRCUIT_BREAKER_FAILURE_THRESHOLD=5

# Compliance Monitoring (optional)
# ENABLE_COMPLIANCE_MONITORING=false
# ENABLED_STANDARDS=gdpr,hipaa,sox

# Security Settings (recommended for production)
# ENABLE_RATE_LIMITING=true
# RATE_LIMIT_REQUESTS_PER_MINUTE=100
# MAX_LOGIN_ATTEMPTS=5
# REQUIRE_HTTPS=true
# ENABLE_SECURITY_HEADERS=true
